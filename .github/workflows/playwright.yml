name: Playwright tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      # centralize browsers path so cache/restore and install use the same directory
      PLAYWRIGHT_BROWSERS_PATH: $HOME/.cache/ms-playwright
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Cache node modules
      - name: Cache node modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      # Cache Playwright browsers to avoid re-downloading each run
      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: $HOME/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-browsers-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-playwright-browsers-

      - name: Ensure Playwright browsers are installed (only if missing)
        run: |
          set -euo pipefail
          # check for a known executable (headless_shell) under the browsers path
          if ! find "${PLAYWRIGHT_BROWSERS_PATH}" -type f -name headless_shell -print -quit >/dev/null 2>&1; then
            echo "Playwright browsers not found in cache; installing..."
            npx playwright install --with-deps
          else
            echo "Playwright browsers found in cache, skipping install."
          fi
      - name: Run tests
        run: npm test
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
